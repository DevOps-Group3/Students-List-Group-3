name: CI/CD Pipeline  # Name of the workflow

on:
  push:
    branches:
      - master  # Trigger the workflow on push events to the 'master' branch
  pull_request:
    branches:
      - master  # Trigger the workflow on pull requests targeting the 'master' branch

jobs:
  build:
    runs-on: ubuntu-latest  # The environment to run the job on

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checks out the source code from the repository

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Sets up Node.js version 16 for the workflow

      - name: Install dependencies
        run: npm install  # Installs npm dependencies required for the project

      - name: Run tests
        run: npm test -- --coverage  # Runs tests and generates coverage reports

      - name: Build application
        run: npm run build  # Builds the React application

      - name: Build Docker image
        run: docker build -t student-list-group-3:latest .  # Builds a Docker image for the application

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}  # Docker Hub username from repository secrets
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}  # Docker Hub password from repository secrets

      - name: Push Docker image to Docker Hub
        # Tags and pushes the Docker image to Docker Hub
        run: |
          docker tag student-list-group-3:latest ${{ secrets.DOCKER_HUB_USERNAME }}/student-list-group-3:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/student-list-group-3:latest

      - name: Set up Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube /usr/local/bin/
          sudo mkdir -p /home/runner/.kube
          sudo mkdir -p /home/runner/.minikube
          minikube start --driver=docker
          minikube status
        # Set KUBECONFIG to the correct path
          echo "KUBECONFIG=/home/runner/.kube/config" >> $GITHUB_ENV


      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'  # Sets up kubectl to interact with the Kubernetes cluster

      - name: Create .kube directory
        run: mkdir -p ~/.kube  # Create the .kube directory if it doesn't exist

      - name: Configure kubectl
        # Decode and write kubeconfig file 
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config  

      - name: Deploy to Kubernetes
        run: kubectl apply -f k8s/deployment.yaml --validate=false  # Apply the Kubernetes deployment
